// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/view', 'text!templates/user/login.hbs'], function(View, template) {
  'use strict';
  var LoginView;
  return LoginView = (function(_super) {
    __extends(LoginView, _super);

    function LoginView() {
      this.join = __bind(this.join, this);
      return LoginView.__super__.constructor.apply(this, arguments);
    }

    LoginView.prototype.autoRender = true;

    LoginView.prototype.className = 'loginView';

    LoginView.prototype.template = template;

    template = null;

    LoginView.prototype.initialize = function() {
      LoginView.__super__.initialize.apply(this, arguments);
      return this.delegate('submit', 'form', this.join);
    };

    LoginView.prototype.join = function(e) {
      var formData;
      e.preventDefault();
      formData = $(e.target).serializeObject();
      this.publishEvent("logged", formData);
      return console.log("view - event sent");
    };

    return LoginView;

  })(View);
});
