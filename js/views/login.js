// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/view', 'text!templates/login.hbs', 'views/startup'], function(View, template, Startup) {
  'use strict';
  var Login;
  return Login = (function(_super) {
    __extends(Login, _super);

    function Login() {
      this.join = __bind(this.join, this);
      this.initialize = __bind(this.initialize, this);
      return Login.__super__.constructor.apply(this, arguments);
    }

    Login.prototype.autoRender = true;

    Login.prototype.className = 'hello-world';

    Login.prototype.template = template;

    template = null;

    Login.prototype.initialize = function() {
      return this.delegate('click', '.join', this.join);
    };

    Login.prototype.join = function() {
      var username, view;
      username = $('#userNameInput').val();
      if ((username != null) && username !== '') {
        username = $('#userNameInput').val();
        alert("Thanks for singing in " + username);
        this.dispose();
        return view = new Startup({
          region: 'main'
        });
      } else {
        return alert("Username cannot be empty");
      }
    };

    return Login;

  })(View);
});
